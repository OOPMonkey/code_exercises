// 6.3. A shortcut task definition
task hello << {
	println 'Hello world!'
}

// Task dependencies
task intro(dependsOn: hello) << {
	println "I'm Gradle"
}

// 6.4 Build scripts are code
// Example 6.4. Using Groovy in Gradle's tasks
task upper << {
	String someString = 'mY_nAmE'
	println "Original: " + someString
	println "Uppercase: " + someString.toUpperCase()
}

// Example 6.5. Using Groovy in Gradle's tasks
task count << {
	4.times {print "$it "}
	println ""
}

// Example 6.7. Lazy dependsOn - the other task does not exist (yet)
task taskX(dependsOn: 'taskY') << {
	println 'taskX'
}

task taskY << {
	println 'taskY'
}

// Example 6.8. Dynamic creation of a task
4.times { counter ->
	task "task$counter" << {
		println "I'm task number $counter"
	}
}
task0.dependsOn task2, task3

// Example 6.10. Accessing a task via API - adding behaviour
task hello2 << {
	println 'Hello Earth'
}

hello2.doFirst {
	println 'Hello Venus'
}

hello2.doLast {
	println	'Hello Mars'
}

hello2 << {
	println 'Hello Jupiter'
}

// Example 6.11. Accessing task as a property of the build script
hello.doLast {
	println "Greetings from the $hello.name task."
}

// Example 6.12. Adding extra properties to a task
task myTask {
	ext.myProperty = "myValue"
}

task printTaskProperties << {
	println myTask.myProperty
}